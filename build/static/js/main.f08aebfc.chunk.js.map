{"version":3,"sources":["components/Todo.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Todo","useState","list","setList","title","setTitle","input","setInput","page","setPage","loading","setLoading","api","useEffect","getData","fetch","then","d","json","res","className","onChange","e","target","value","placeholder","type","f","onClick","data","method","body","JSON","stringify","headers","map","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oOAEaA,EAAQ,WAAO,IAAD,EAECC,mBAAS,IAFV,mBAEhBC,EAFgB,KAEVC,EAFU,OAIGF,mBAAS,IAJZ,mBAIhBG,EAJgB,KAITC,EAJS,OAKGJ,mBAAS,IALZ,mBAKhBK,EALgB,KAKTC,EALS,OAMCN,mBAAS,GANV,mBAMhBO,EANgB,KAMVC,EANU,OAOOR,oBAAS,GAPhB,mBAOhBS,EAPgB,KAOPC,EAPO,KASjBC,EAAM,8BAEZC,qBAAU,WACNC,MACD,CAACN,IAEJ,IAAMM,EAAU,WACZH,GAAW,GACXI,MAAM,GAAD,OAAIH,EAAJ,kBAAiBJ,EAAjB,cACJQ,MAAK,SAACC,GAAD,OAAOA,EAAEC,UACdF,MAAK,SAACG,GACHhB,EAAQgB,GACRR,GAAW,OAKnB,OAAOD,EACH,aAEA,sBAAKU,UAAU,UAAf,UACA,oBAAIA,UAAU,QAAd,qBACA,uBACAC,SAAU,SAACC,GAAD,OAAOjB,EAASiB,EAAEC,OAAOC,QAClCJ,UAAU,aAAaK,YAAY,eAAeC,KAAK,SACxD,uBACAL,SAAU,SAACM,GAAD,OACNpB,EAASoB,EAAEJ,OAAOC,QACrBJ,UAAU,YAAYM,KAAK,OAAOD,YAAY,gBAC9C,uBACD,wBACIG,QAAS,WAEL,IAAMC,EAAO,CAACzB,QAAOE,SACrBS,MAAMH,EAAK,CACPkB,OAAO,OACPC,KAAKC,KAAKC,UAAUJ,GACpBK,QAAQ,CACJ,eAAe,sBAEpBlB,KAAKF,IAEfM,UAAU,SAZX,iBAaC,qBAAKA,UAAU,YAAf,SACI,wBAAOA,UAAU,YAAjB,UACI,gCACI,+BACI,oBAAIA,UAAU,SAAd,mBACA,oBAAIA,UAAU,OAAd,uBAIflB,EAAKiC,KAAI,SAACb,GACP,OACA,+BACI,oBAAIF,UAAU,SAAd,SAAwBE,EAAElB,QAC1B,oBAAIgB,UAAU,OAAd,SAAsBE,EAAEhB,mBAMjC,wBACAsB,QAAS,WACLnB,EAAQD,EAAO,IACdY,UAAU,aAHf,kBAIA,wBACAQ,QAAS,WACLnB,EAAQD,EAAO,IACdY,UAAU,aAHf,sBC/DOgB,MAXf,WAEE,OAEE,qBAAKhB,UAAU,eAAf,SAEE,sBAAKA,UAAU,MAAf,cAAsB,cAAC,EAAD,UCGbiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBvB,MAAK,YAAkD,IAA/CwB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.f08aebfc.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\"\r\nimport \"./todo.css\"\r\nexport const Todo = (() => {\r\n\r\n    const [list, setList] = useState([]);\r\n\r\n    const [title, setTitle] = useState(\"\");\r\n    const [input, setInput] = useState(\"\");\r\n    const [page, setPage] = useState(1);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const api = \"http://localhost:3001/todos\";\r\n\r\n    useEffect(() => {\r\n        getData()\r\n    }, [page])\r\n\r\n    const getData = () =>{\r\n        setLoading(true);\r\n        fetch(`${api}?_page=${page}&_limit=5`)\r\n        .then((d) => d.json())\r\n        .then((res) => {\r\n            setList(res)\r\n            setLoading(false)\r\n        })\r\n    }\r\n\r\n\r\n    return loading ? (\r\n        \"Loading...\"\r\n    ): (\r\n        <div className=\"mainDiv\">\r\n        <h1 className=\"title\">Todo...</h1>\r\n        <input\r\n        onChange={(e) => setTitle(e.target.value)}\r\n         className=\"inputTitle\" placeholder=\"Add Title...\" type=\"text\" />\r\n        <input\r\n        onChange={(f) =>\r\n            setInput(f.target.value) }\r\n         className=\"inputBody\" type=\"text\" placeholder=\"Add Task...\" />\r\n         <br/>\r\n        <button\r\n            onClick={() => {\r\n                // setList([...list, {title, input}])\r\n                const data = {title, input}\r\n                fetch(api, {\r\n                    method:\"POST\",\r\n                    body:JSON.stringify(data),\r\n                    headers:{\r\n                        \"content-type\":\"application/json\"\r\n                    }\r\n                }).then(getData)\r\n            }}\r\n         className=\"addBtn\">Add</button>\r\n         <div className=\"container\">\r\n             <table className=\"container\">\r\n                 <thead>\r\n                     <tr>\r\n                         <th className=\"dTitle\">Title</th>\r\n                         <th className=\"dOut\">Body</th>\r\n                     </tr>\r\n                 </thead>\r\n             \r\n         {list.map((e) =>{\r\n             return (\r\n             <tr>\r\n                 <td className=\"dTitle\">{e.title}</td>\r\n                 <td className=\"dOut\">{e.input}</td>\r\n             </tr>  \r\n             )\r\n         })}\r\n         </table>\r\n        </div>\r\n        <button\r\n        onClick={() => {\r\n            setPage(page - 1);\r\n          }} className=\"prev style\">Prev</button>\r\n        <button\r\n        onClick={() => {\r\n            setPage(page + 1);\r\n          }} className=\"next style\">Next</button>\r\n        </div>\r\n    )\r\n    \r\n})","import { Todo } from \"./components/Todo\";\nimport \"./index.css\";\n\nfunction App() {\n  const api = \"http://localhost:3000/\"\n  return (\n\n    <div className=\"outterScreen\">\n\n      <div className=\"App\"> <Todo /></div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}